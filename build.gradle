plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.6"
}

repositories {
    mavenCentral()
}
compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.27.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.10.2",
            'com.github.javafaker:javafaker:1.0.2',
            "com.codeborne:selenide:7.2.3",
            'org.slf4j:slf4j-simple:2.0.13',
            "org.assertj:assertj-core:3.26.0",
            "org.aeonbits.owner:owner:1.0.12"
    )
    implementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.10.2",
            'com.github.javafaker:javafaker:1.0.2',
            "com.codeborne:selenide:7.2.3",
            'org.slf4j:slf4j-simple:2.0.13',
            "org.assertj:assertj-core:3.26.0",
            "org.aeonbits.owner:owner:1.0.12"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
tasks.register("webEvents", Test) {
    useJUnitPlatform {
        includeTags("webEvents")
    }
}
tasks.register("apiAccount", Test) {
    useJUnitPlatform {
        includeTags("apiAccount")
    }
}

tasks.register("webAccount", Test) {
    useJUnitPlatform {
        includeTags("webAccount")
    }
}
tasks.register("apiEvents", Test) {
    useJUnitPlatform {
        includeTags("apiEvents")
    }
}

tasks.register("apiAll", Test) {
    useJUnitPlatform {
        includeTags("apiEvents", "apiAccount")
    }
}

tasks.register("webAll", Test) {
    useJUnitPlatform {
        includeTags("webEvents", "webAccount")
    }
}